-- ============================================================================
-- Utility functions used by other scripts
--
-- This has to be rebuilt into library.scpt if it changes. Running 'make'
-- will do this (see Makefile).
-- ============================================================================
-- Copy the contents of *old_note* into a new note titled *new_title*
--
on copy_note(old_note, new_title)
    tell application "Evernote"
        set my_content to HTML content of old_note
        set new_note to create note with text "" title new_title Â¬
            notebook "Journal" tags "testing"
        set HTML content of new_note to my_content
    end tell
    return new_note
end copy_note

-- ============================================================================
-- Generate the title for a diary note based on *the_date*
--
on diary_title(the_date)
    set { year:y, month:m, day:d, weekday:wkday } to (the_date)
    set wdabbr to my lowercase(my substring(wkday as string, 1, 3))
    set m to zpad(1*m)
    set d to zpad(d)
    set the_title to y & "." & m & d & "." & wdabbr as string & " diary"
    return the_title
end diary_title

-- ============================================================================
-- Ensure that notebook *nb_name* exists
--
on ensure_notebook(nb_name)
    tell application "Evernote"
        if not exists notebook named nb_name
            create notebook nb_name
        end if
    end tell
end ensure_notebook

-- ============================================================================
-- Return the lowercase version of *this_text*
--
on lowercase(this_text)
    set rval to do shell script "echo " & quoted form of (this_text) & " | tr A-Z a-z"
    return rval as string
end lowercase

-- ============================================================================
-- Return the substring of *source* (a string) beginning at *schar* (a
-- number) and going through *lchar* (a number)
--
on substring(source, schar, lchar)
    set rval to characters schar thru lchar of source
    return rval as string
end substring

-- ============================================================================
-- Pad a single digit number with a leading zero
--
on zpad(N)
    set rval to "" & N
    if length of rval is less than 2 then
        set rval to "0" & rval
    end if
    return rval
end zpad
